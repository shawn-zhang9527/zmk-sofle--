#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1     &kp N2        &kp N3                  &kp N4       &kp N5             &kp UP_ARROW     &kp N6         &kp N7     &kp N8                 &kp N9             &kp N0             &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E                   &kp R        &kp T              &kp DOWN_ARROW   &kp Y          &kp U      &kp I                  &kp O              &kp P              &kp BSLH
&tog 1      &kp A      &kp S         &kp D                   &kp F        &kp G              &kp LEFT_ARROW   &kp H          &kp J      &kp K                  &kp L              &kp SEMI           &lt 2 SQT
&kp LSHFT   &kp Z      &kp X         &kp C                   &kp V        &kp B              &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA              &kp DOT            &kp FSLH           &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &mt LEFT_COMMAND ENTER  &lt 1 SPACE  &lt 3 BACKSPACE    &kp ENTER        &kp BACKSPACE  &kp SPACE  &mt RIGHT_SHIFT ENTER  &kp RIGHT_COMMAND  &kp RIGHT_COMMAND
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ESC     &kp NUMBER_6        &kp N7          &kp N8               &kp N9     &kp N0    &mmv MOVE_UP     &trans  &trans     &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &kp LA(LEFT_ARROW)  &kp UP_ARROW    &kp LA(RIGHT_ARROW)  &none      &none     &mmv MOVE_DOWN   &none   &kp UNDER  &kp PLUS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp ENTER
&trans      &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp ENTER  &none     &mmv MOVE_LEFT   &none   &kp MINUS  &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ENTER
&trans      &trans              &trans          &trans               &trans     &trans    &mmv MOVE_RIGHT  &none   &none      &none      &none                 &none                  &kp ENTER
&kp C_MUTE  &trans              &trans          &trans               &trans     &trans    &mkp LCLK        &trans  &trans     &trans     &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &none           &none           &none            &none  &none    &mmv MOVE_UP     &trans  &trans  &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none      &trans          &kp UP_ARROW    &none            &none  &none    &mmv MOVE_DOWN   &none   &none   &kp MINUS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none
&trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none    &mmv MOVE_LEFT   &none   &none   &none      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp ENTER
&none      &sys_reset      &none           &bootloader      &none  &none    &mmv MOVE_RIGHT  &none   &none   &none      &none                 &none                  &kp ENTER
&none      &sys_reset      &soft_off       &none            &none  &none    &mkp LCLK        &none   &none   &none      &none                 &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp F11    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &none   &none   &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &none   &none   &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &none   &none   &none   &none                 &none                  &kp ENTER
&trans     &sys_reset    &soft_off       &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans  &trans                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
